syntax = "proto3";

package tea.analysis;
option java_package = 'com.neuromancer42.tea.core.analysis';

import "analysis/trgt.proto";

service Provider {
    rpc GetFeature (Configs) returns (ProviderInfo) {}
    rpc RunAnalysis (RunRequest) returns (RunResults) {}
    rpc Prove (ProveRequest) returns (stream ProveResponse) {}
    rpc Instrument (InstrumentRequest) returns (InstrumentResponse) {}
    rpc Test (TestRequest) returns (stream TestResponse) {}
    rpc Shutdown (ShutdownRequest) returns (ShutdownResponse) {}
}

message Configs {
    map<string, string> property = 1;
}

message ProviderInfo {
    string name = 1;
    repeated AnalysisInfo analysis = 2;
    repeated RelInfo provable_rel = 3;
    repeated RelInfo observable_rel = 4;
}

message AnalysisInfo {
    string name = 1;
    repeated DomInfo consuming_dom = 2;
    repeated RelInfo consuming_rel = 3;
    repeated DomInfo producing_dom = 4;
    repeated RelInfo producing_rel = 5;
}

message RunRequest {
    string project_id = 1;
    string analysis_name = 2;
    Configs option = 3;
    repeated DomTrgt dom_input = 4;
    repeated RelTrgt rel_input = 5;
}

message RunResults {
    string msg = 1;
    repeated DomTrgt dom_output = 2;
    repeated RelTrgt rel_output = 3;
}


message InstrumentRequest {
    string project_id = 1;
    Configs option = 2;
    repeated Tuple instr_tuple = 3;
    repeated DomTrgt dom = 4;
}

message InstrumentResponse {
    repeated Tuple succ_tuple = 1;
}

message TestRequest {
    string project_id = 1;
    Configs option = 2;
    string test_dir = 3;
    repeated string test_id = 4;
}

message TestResponse {
    string test_id = 1;
    repeated Tuple triggered_tuple = 2;
    repeated Tuple negated_tuple = 3;
}

message ProveRequest {
    string project_id = 1;
    Configs option = 2;
    repeated Tuple target_tuple = 3;
}

message ProveResponse {
    repeated Constraint constraint = 1;
    repeated Tuple unsolved_tuple = 2;
}

message ShutdownRequest {
    string project_id = 1;
}

message ShutdownResponse {
}